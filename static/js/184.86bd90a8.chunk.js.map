{"version":3,"file":"static/js/184.86bd90a8.chunk.js","mappings":"kKACA,G,QAAA,CAAgB,QAAU,yBAAyB,aAAe,8BAA8B,OAAS,wBAAwB,OAAS,wBAAwB,SAAW,0BAA0B,OAAS,wBAAwB,YAAc,+B,6BCmBtP,EAfmB,SAACA,GAElB,IAAIC,EAAO,YAAcD,EAAME,GAC/B,OACEC,EAAAA,EAAAA,KAAA,OAAKC,UAAU,SAAQC,UACrBC,EAAAA,EAAAA,MAACC,EAAAA,GAAO,CACNC,GAAIP,EACJG,UAAW,SAACK,GAAM,OAAMA,EAAOC,SAAWC,EAAAA,OAAWA,EAAAA,MAAQ,EAAEN,SAAA,EAE/DF,EAAAA,EAAAA,KAAA,OAAKS,IAAKC,EAAQT,UAAWO,EAAAA,SAAY,IAAEX,EAAMc,SAIzD,E,qDCNA,EARgB,SAACd,GACf,OACEM,EAAAA,EAAAA,MAAA,OAAKF,UAAWO,EAAAA,QAAUN,SAAA,EACxBF,EAAAA,EAAAA,KAAA,OAAKS,IAAKG,EAAaX,UAAWO,EAAAA,cAAgB,IAAEX,EAAMgB,UAGhE,E,uCCFMC,GAAcC,EAAAA,EAAAA,GAAiB,IAe/BC,GAAsBC,EAAAA,EAAAA,GAAU,CAAEC,KAAM,kBAAlBD,EAbL,SAACpB,GACtB,OACEM,EAAAA,EAAAA,MAAA,QAAMgB,SAAUtB,EAAMuB,aAAalB,SAAA,EACjCF,EAAAA,EAAAA,KAAA,OAAAE,UACEF,EAAAA,EAAAA,KAACqB,EAAAA,EAAK,CAACC,MAAM,WAAWC,UAAWC,EAAAA,EAAab,KAAM,iBAAkBc,SAAU,CAACC,EAAAA,EAAeZ,QAEpGd,EAAAA,EAAAA,KAAA,OAAAE,UACEF,EAAAA,EAAAA,KAAA,UAAAE,SAAQ,YAIhB,IA4BA,EAxBgB,SAACL,GACf,IAAI8B,EAAU9B,EAAM+B,aAAaC,YAAYC,KAAI,SAACxB,GAAM,OACtDN,EAAAA,EAAAA,KAAC+B,EAAU,CAACpB,KAAML,EAAOK,KAAMZ,GAAIO,EAAOP,IAAM,IAG9CiC,EAAWnC,EAAM+B,aAAaK,aAAaH,KAAI,SAACjB,GAAO,OACzDb,EAAAA,EAAAA,KAACkC,EAAO,CAACrB,QAASA,EAAQA,QAASd,GAAIc,EAAQd,IAAM,IAQvD,OACEI,EAAAA,EAAAA,MAAA,OAAKF,UAAWO,EAAAA,QAAUN,SAAA,EACxBF,EAAAA,EAAAA,KAAA,OAAKC,UAAWO,EAAAA,aAAeN,SAAEyB,KACjC3B,EAAAA,EAAAA,KAAA,OAAKC,UAAWO,EAAAA,SAAWN,SAAE8B,KAE7BhC,EAAAA,EAAAA,KAACgB,EAAmB,CAACG,SAVL,SAACgB,GACnBC,QAAQC,IAAIF,GACZtC,EAAMyC,WAAWH,EAAOI,eAC1B,MAUF,E,UCjCA,G,SAAeC,E,QAAAA,KACXC,EAAAA,EAAAA,KAPkB,SAACC,GACnB,MAAO,CACHd,aAAcc,EAAMd,aAE5B,GAG6B,CAAEU,WAAAA,EAAAA,IAD/B,CAGEK,G","sources":["webpack://react-1/./src/components/Dialogs/Dialogs.module.css?1b2e","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/Message/Message.jsx","components/Dialogs/Dialogs.jsx","components/Dialogs/DialogsContainer.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"dialogs\":\"Dialogs_dialogs__oe96H\",\"dialogsItems\":\"Dialogs_dialogsItems__zeEWD\",\"active\":\"Dialogs_active__t8cjl\",\"dialog\":\"Dialogs_dialog__htSTl\",\"messages\":\"Dialogs_messages__Cg2l+\",\"avatar\":\"Dialogs_avatar__J0Uvr\",\"messageIcon\":\"Dialogs_messageIcon__jpB2D\"};","import React from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport s from \"./../Dialogs.module.css\";\nimport avatar from \"./../../../img/avatar.png\";\n\nconst DialogItem = (props) => {\n  \n  let path = \"/dialogs/\" + props.id;\n  return (\n    <div className=\"center\">\n      <NavLink\n        to={path}\n        className={(dialog) => (dialog.isActive ? s.active : s.dialog)}\n      >\n        <img src={avatar} className={s.avatar} /> {props.name}\n      </NavLink>\n    </div>\n  );\n};\n// {s.dialog + \" \" + s.active}\nexport default DialogItem;\n","import React from \"react\";\nimport s from \"./../Dialogs.module.css\";\nimport messageIcon from \"./../../../img/865771.png\";\n\nconst Message = (props) => {\n  return (\n    <div className={s.message}>\n      <img src={messageIcon} className={s.messageIcon}/> {props.message}\n    </div>\n  );\n};\n\nexport default Message;\n","import React from \"react\";\nimport s from \"./Dialogs.module.css\";\nimport DialogItem from \"./DialogItem/DialogItem\";\nimport Message from \"./Message/Message\";\nimport { reduxForm, Field } from \"redux-form\";\nimport { FormControl } from \"../common/FormsControls/FormsControls\";\nimport { maxLengthCreator, requiredField } from \"../../utils/validators/validators\";\n\nconst maxLenght50 = maxLengthCreator(50);\n\nconst AddMessageForm = (props) => {\n  return (\n    <form onSubmit={props.handleSubmit}>\n      <div>\n        <Field child=\"textarea\" component={FormControl} name={\"newMessageText\"} validate={[requiredField, maxLenght50]} />\n      </div>\n      <div>\n        <button>Add</button>\n      </div>\n    </form>\n  )\n}\n\nconst AddMessageFormRedux = reduxForm({ form: 'AddMessageForm' })(AddMessageForm);\n\nconst Dialogs = (props) => {\n  let dialogs = props.messagesPage.dialogsData.map((dialog) => (\n    <DialogItem name={dialog.name} id={dialog.id} />\n  ));\n\n  let messages = props.messagesPage.messagesData.map((message) => (\n    <Message message={message.message} id={message.id} />\n  ));\n\n  let AddNewMessage = (values) => {\n    console.log(values);\n    props.addMessage(values.newMessageText)\n  }\n\n  return (\n    <div className={s.dialogs}>\n      <div className={s.dialogsItems}>{dialogs}</div>\n      <div className={s.messages}>{messages}</div>\n\n      <AddMessageFormRedux onSubmit={AddNewMessage} />\n    </div>\n  );\n};\n\nexport default Dialogs;\n","import {\n    addMessage,\n} from \"../../redux/dialogs-reducer\";\nimport Dialogs from \"./Dialogs\";\nimport { connect } from \"react-redux\";\nimport { withAuthRedirect } from '../../hoc/withAuthRedirect';\nimport { compose } from \"redux\";\n\nlet mapStateToProps = (state) => {\n    return {\n        messagesPage: state.messagesPage,\n    }\n}\n\nexport default compose(\n    connect(mapStateToProps, { addMessage }),\n    // withAuthRedirect\n)(Dialogs);"],"names":["props","path","id","_jsx","className","children","_jsxs","NavLink","to","dialog","isActive","s","src","avatar","name","messageIcon","message","maxLenght50","maxLengthCreator","AddMessageFormRedux","reduxForm","form","onSubmit","handleSubmit","Field","child","component","FormControl","validate","requiredField","dialogs","messagesPage","dialogsData","map","DialogItem","messages","messagesData","Message","values","console","log","addMessage","newMessageText","compose","connect","state","Dialogs"],"sourceRoot":""}