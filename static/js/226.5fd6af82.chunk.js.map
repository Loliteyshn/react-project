{"version":3,"file":"static/js/226.5fd6af82.chunk.js","mappings":"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","sources":["webpack://react-1/./src/components/Profile/MyPosts/MyPosts.module.css?831b","webpack://react-1/./src/components/Profile/MyPosts/Post/Post.module.css?87e6","components/Profile/MyPosts/Post/Post.jsx","components/Profile/ProfileInfo/ProfileStatus.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","webpack://react-1/./src/components/Profile/ProfileInfo/ProfileInfo.module.css?ead2","components/common/Preloader/Preloader.js","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"posts\":\"MyPosts_posts__GSiZ2\",\"input\":\"MyPosts_input__7uVRv\",\"inputs\":\"MyPosts_inputs__-E79Y\",\"btn\":\"MyPosts_btn__v9RAD\"};","// extracted by mini-css-extract-plugin\nexport default {\"postImg\":\"Post_postImg__RhVPL\",\"flex\":\"Post_flex__Amv+A\"};","import style from \"./Post.module.css\";\nimport peachNumb from \"../../../../img/529peach_100978.png\";\n\nconst Post = (props) => {\n  return (\n    <div className={style.flex}>\n      <img src={peachNumb} alt=\"\" className={style.postImg} />\n      {props.message} {props.likesCount}\n\n    </div>\n  );\n};\n\nexport default Post;\n","import React, { useState, useEffect } from \"react\";\n\n// function ProfileStatus(props) \nconst ProfileStatus = (props) => {\n    const [editMode, setEditMode] = useState(false);\n    const [status, setStatus] = useState(props.status);\n\n    useEffect( () => {\n        setStatus(props.status);\n    }, [props.status]);\n\n    let activateEditMode = () => {\n        setEditMode(true);\n    }\n\n    let deactivateEditMode = () => {\n        setEditMode(false);\n        props.updateStatus(status);\n    }\n\n    let onStatusChange = (e) => {\n        setStatus(e.target.value);\n    }\n\n    return <>\n        {!editMode &&\n            <div>\n\n                <span onDoubleClick={activateEditMode}>{props.status || \"----\"}</span>\n            </div>\n        }\n\n        {editMode &&\n            <div>\n                <input onChange={onStatusChange} autoFocus={true} onBlur={deactivateEditMode}\n                    value={status} />\n            </div>\n        }\n    </>\n}\n\n\n\n\nexport default ProfileStatus;\n","import React from \"react\";\nimport style from \"./MyPosts.module.css\";\nimport Post from \"./Post/Post\";\nimport ProfileStatus from \"../ProfileInfo/ProfileStatus\";\nimport { Field } from \"redux-form\";\nimport { reduxForm } from \"redux-form\";\nimport { requiredField, maxLengthCreator } from \"../../../utils/validators/validators\";\nimport { FormControl } from \"../../common/FormsControls/FormsControls\";\n\nconst maxLength10 = maxLengthCreator(10);\n\nconst AddPostForm = (props) => {\n  return (\n    <form onSubmit={props.handleSubmit}>\n      <div>\n        <Field child=\"textarea\" component={FormControl} name={\"newPostText\"} validate={[requiredField, maxLength10]} placeholder=\"Post message\" />\n      </div>\n      <div>\n        <button>Login</button>\n      </div>\n    </form>\n  )\n}\n\nconst AddPostReduxForm = reduxForm({ form: 'AddPost' })(AddPostForm)\n\n\nconst MyPosts = React.memo((props) => {\n  let postsElements = props.posts.map((post) => {\n    return (\n      <Post message={post.message} key={post.id} likesCount={post.likesCount} />\n    );\n  });\n\n  let AddPost = (formData) => {\n    console.log('potts', formData);\n    props.addPost(formData.newPostText);\n  }\n\n  return (\n    <div className={style.posts}>\n      <ProfileStatus status={props.status} updateStatus={props.updateStatus} />\n\n      <h3>My posts</h3>\n      <div className={style.flex}>\n        <AddPostReduxForm onSubmit={AddPost}/>\n      </div>\n\n      <div>{postsElements}</div>\n    </div>\n  );\n});\n\n\nexport default MyPosts;\n","import { connect } from \"react-redux\";\nimport {\n    addPost,\n    getStatus,\n    updateStatus\n} from \"../../../redux/profile-reducer\";\nimport MyPosts from \"./MyPosts\";\n\nlet mapStateToProps = (state) => {\n    return {\n        posts: state.profilePage.posts,\n        newPostText: state.profilePage.newPostText,\n        status: state.profilePage.status\n    };\n};\n\nconst MyPostsContainer = connect(mapStateToProps, { addPost, getStatus, updateStatus })(MyPosts);\n\nexport default MyPostsContainer;","// extracted by mini-css-extract-plugin\nexport default {\"profile\":\"ProfileInfo_profile__XM2oU\",\"mainImg\":\"ProfileInfo_mainImg__ZzD1A\"};","import React from \"react\";\nimport preloader from \"../../../assets/images/Spin-1s-200px.svg\";\n\nlet Preloader = (props) => {\n  <div style={{ backgroundColor: \"white\" }}>\n    <img src={preloader} />\n  </div>;\n};\n\nexport default Preloader;\n","import s from \"./ProfileInfo.module.css\";\nimport profileImg from \"../../../img/profile-img.jpeg\";\nimport mainImg from \"../../../img/peaches.jpeg\";\nimport Preloader from \"../../common/Preloader/Preloader\";\nimport ProfileStatus from \"./ProfileStatus\";\n\nconst ProfileInfo = (props) => {\n  console.log(props);\n  if (!props.profile) {\n    return <Preloader />\n  }\n\n  return (\n    <div>\n      <img src={mainImg} alt=\"\" className={s.mainImg} />\n      <div className={s.profile}>\n        <img src={props.profile.photos.large} alt=\"\" />\n        \n        <div>\n          <h2>{props.profile.fullName}</h2>\n          <p>\n            {props.profile.aboutMe}<br />\n            {props.profile.lookingForAJobDescription} <br />\n            \n          </p>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default ProfileInfo;\n","import MyPostsContainer from \"./MyPosts/MyPostsContainer\";\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\n\nconst Profile = (props) => {\n  return (\n    <div>\n      <ProfileInfo profile={props.profile}  />\n      <MyPostsContainer />\n    </div>\n  );\n};\n\nexport default Profile;\n","import { Component, useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport Profile from \"./Profile\";\nimport { getUserProfile, getStatus, updateStatus } from \"../../redux/profile-reducer\";\nimport { useParams, Navigate } from 'react-router-dom';\nimport { withAuthRedirect } from \"../../hoc/withAuthRedirect\";\nimport { compose } from \"redux\";\n\n\nfunction ProfileContainer(props) {\n  let { userId } = useParams();\n\n  useEffect(() => {\n    if (!userId) {\n      userId = props.authorizedUserId;\n      if (!userId) {\n        window.location.href = '/login';\n        // props.history.push('/login');\n      }\n    }\n    props.getUserProfile(userId)\n    props.getStatus(userId)\n\n  }, [userId, props.getUserProfile, props.getStatus]);\n\n\n  return (\n    <div>\n      <Profile profile={props.profile}\n        status={props.status}\n        updateStatus={props.updateStatus} />\n    </div>\n  );\n}\n\nlet mapStateToProps = (state) => ({\n  profile: state.profilePage.profile,\n  status: state.profilePage.status,\n  authorizedUserId: state.auth.userId,\n  isAuth: state.auth.isAuth\n});\n\n\nexport default compose(\n  connect(mapStateToProps, { getUserProfile, getStatus, updateStatus }),\n  // withAuthRedirect\n)(ProfileContainer);"],"names":["props","_jsxs","className","style","children","_jsx","src","peachNumb","alt","message","likesCount","_useState","useState","_useState2","_slicedToArray","editMode","setEditMode","_useState3","status","_useState4","setStatus","useEffect","_Fragment","onDoubleClick","onChange","e","target","value","autoFocus","onBlur","updateStatus","maxLength10","maxLengthCreator","AddPostReduxForm","reduxForm","form","onSubmit","handleSubmit","Field","child","component","FormControl","name","validate","requiredField","placeholder","React","postsElements","posts","map","post","Post","id","ProfileStatus","formData","console","log","addPost","newPostText","connect","state","profilePage","getStatus","MyPosts","preloader","profile","mainImg","s","photos","large","fullName","aboutMe","lookingForAJobDescription","Preloader","ProfileInfo","MyPostsContainer","compose","authorizedUserId","auth","userId","isAuth","getUserProfile","useParams","window","location","href","Profile"],"sourceRoot":""}